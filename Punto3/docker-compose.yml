services:
  traefik:
    image: traefik:v2.11
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--accesslog=true"
      - "--accesslog.filepath=/logs/traefik.log"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logs:/logs

  api:
    image: containous/whoami
    deploy:
      replicas: 2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`pikachu.localhost`) && PathPrefix(`/`)"
      - "traefik.http.services.api.loadbalancer.server.port=80"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.average=3"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.burst=5"
      - "traefik.http.routers.api.middlewares=api-ratelimit"
      

  api-legendario:
    image: containous/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-legendario.rule=Host(`pikachu.localhost`) && Path(`/legendario`)"
      - "traefik.http.services.api-legendario.loadbalancer.server.port=80"

  db:
    image: neo4j:5.22.0-community
    environment:
      NEO4J_AUTH: neo4j/test
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.db.rule=Host(`charizard.localhost`)"
      - "traefik.http.services.db.loadbalancer.server.port=7474"
      - "traefik.http.middlewares.db-auth.basicauth.users=admin:$$2y$$05$$Q4NDECYmU7zTl5fMf02IDOIv6J6QV/Izv0lCgdxu2LoZRpfkWTIx"
      - "traefik.http.routers.db.middlewares=db-auth"
    ports:
      - "7474:7474"
      - "7687:7687"

  static:
    image: containous/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static.rule=Host(`bulbasaur.localhost`)"
      - "traefik.http.services.static.loadbalancer.server.port=80"

